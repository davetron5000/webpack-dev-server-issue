{"version":3,"sources":["webpack://app/./js/index.js","webpack://app/./js/renderMarkdown.js","webpack://app/./node_modules/markdown-it/index.js","webpack://app/./node_modules/markdown-it/lib/index.js","webpack://app/./node_modules/markdown-it/lib/common/utils.js","webpack://app/./node_modules/markdown-it/lib/common/entities.js","webpack://app/./node_modules/uc.micro/categories/P/regex.js","webpack://app/./node_modules/mdurl/index.js","webpack://app/./node_modules/mdurl/encode.js","webpack://app/./node_modules/mdurl/decode.js","webpack://app/./node_modules/mdurl/format.js","webpack://app/./node_modules/mdurl/parse.js","webpack://app/./node_modules/uc.micro/index.js","webpack://app/./node_modules/uc.micro/properties/Any/regex.js","webpack://app/./node_modules/uc.micro/categories/Cc/regex.js","webpack://app/./node_modules/uc.micro/categories/Cf/regex.js","webpack://app/./node_modules/uc.micro/categories/Z/regex.js","webpack://app/./node_modules/markdown-it/lib/helpers/index.js","webpack://app/./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack://app/./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack://app/./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack://app/./node_modules/markdown-it/lib/renderer.js","webpack://app/./node_modules/markdown-it/lib/parser_core.js","webpack://app/./node_modules/markdown-it/lib/ruler.js","webpack://app/./node_modules/markdown-it/lib/rules_core/normalize.js","webpack://app/./node_modules/markdown-it/lib/rules_core/block.js","webpack://app/./node_modules/markdown-it/lib/rules_core/inline.js","webpack://app/./node_modules/markdown-it/lib/rules_core/linkify.js","webpack://app/./node_modules/markdown-it/lib/rules_core/replacements.js","webpack://app/./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack://app/./node_modules/markdown-it/lib/rules_core/state_core.js","webpack://app/./node_modules/markdown-it/lib/token.js","webpack://app/./node_modules/markdown-it/lib/parser_block.js","webpack://app/./node_modules/markdown-it/lib/rules_block/table.js","webpack://app/./node_modules/markdown-it/lib/rules_block/code.js","webpack://app/./node_modules/markdown-it/lib/rules_block/fence.js","webpack://app/./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack://app/./node_modules/markdown-it/lib/rules_block/hr.js","webpack://app/./node_modules/markdown-it/lib/rules_block/list.js","webpack://app/./node_modules/markdown-it/lib/rules_block/reference.js","webpack://app/./node_modules/markdown-it/lib/rules_block/heading.js","webpack://app/./node_modules/markdown-it/lib/rules_block/lheading.js","webpack://app/./node_modules/markdown-it/lib/rules_block/html_block.js","webpack://app/./node_modules/markdown-it/lib/common/html_blocks.js","webpack://app/./node_modules/markdown-it/lib/common/html_re.js","webpack://app/./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack://app/./node_modules/markdown-it/lib/rules_block/state_block.js","webpack://app/./node_modules/markdown-it/lib/parser_inline.js","webpack://app/./node_modules/markdown-it/lib/rules_inline/text.js","webpack://app/./node_modules/markdown-it/lib/rules_inline/newline.js","webpack://app/./node_modules/markdown-it/lib/rules_inline/escape.js","webpack://app/./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack://app/./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack://app/./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack://app/./node_modules/markdown-it/lib/rules_inline/link.js","webpack://app/./node_modules/markdown-it/lib/rules_inline/image.js","webpack://app/./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack://app/./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack://app/./node_modules/markdown-it/lib/rules_inline/entity.js","webpack://app/./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack://app/./node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack://app/./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack://app/./node_modules/linkify-it/index.js","webpack://app/./node_modules/linkify-it/lib/re.js","webpack://app/./node_modules/punycode/punycode.es6.js","webpack://app/./node_modules/markdown-it/lib/presets/default.js","webpack://app/./node_modules/markdown-it/lib/presets/zero.js","webpack://app/./node_modules/markdown-it/lib/presets/commonmark.js","webpack://app/./node_modules/sourcemapped-stacktrace/dist/sourcemapped-stacktrace.js","webpack://app/webpack/bootstrap","webpack://app/webpack/runtime/compat get default export","webpack://app/webpack/runtime/define property getters","webpack://app/webpack/runtime/hasOwnProperty shorthand","webpack://app/webpack/runtime/make namespace object","webpack://app/webpack/startup"],"names":["document","addEventListener","event","getElementById","preventDefault","textArea","previewElement","error","mapStackTrace","stack","mappedStack","join","innerHTML","value","Error","module","exports","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","LinkifyIt","mdurl","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","url","str","trim","toLowerCase","test","RECODE_HOSTNAME_FOR","normalizeLink","parsed","parse","hostname","protocol","indexOf","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","defaultChars","MarkdownIt","presetName","options","this","isString","inline","block","core","renderer","linkify","assign","configure","set","prototype","presets","self","components","Object","keys","forEach","name","rules","ruler","enableOnly","rules2","ruler2","enable","list","ignoreInvalid","result","Array","isArray","chain","concat","missed","filter","length","disable","use","plugin","args","slice","call","arguments","apply","src","env","state","State","process","tokens","render","parseInline","inlineMode","renderInline","_hasOwnProperty","hasOwnProperty","has","object","key","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","RegExp","source","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","ucmicro","obj","sources","TypeError","toString","_class","unescapeMd","replace","unescapeAll","match","escaped","entity","code","charCodeAt","parseInt","replaceEntityPattern","escapeHtml","arrayReplaceAt","pos","newElements","isSpace","isWhiteSpace","isMdAsciiPunct","isPunctChar","escapeRE","normalizeReference","toUpperCase","encodeCache","string","exclude","keepEscaped","i","l","nextCode","cache","push","getEncodeCache","encodeURIComponent","componentChars","decodeCache","getDecodeCache","seq","b1","b2","b3","b4","chr","slashes","auth","port","pathname","search","hash","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","rest","split","simplePath","exec","proto","substr","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","validParts","notHost","bit","unshift","qm","u","Any","Cc","Cf","P","Z","parseLinkLabel","parseLinkDestination","parseLinkTitle","start","disableNested","level","found","marker","prevPos","labelEnd","max","posMax","oldPos","md","skipToken","ok","lines","default_rules","code_inline","idx","slf","token","renderAttrs","content","code_block","fence","highlighted","arr","tmpAttrs","tmpToken","info","langName","langAttrs","highlight","attrIndex","attrs","langPrefix","image","renderInlineAsText","children","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","nextToken","needLf","hidden","nesting","tag","type","len","Ruler","_rules","Core","getRules","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","alt","altName","fn","at","index","opt","before","beforeName","ruleName","splice","after","afterName","chainName","NEWLINES_RE","NULL_RE","Token","map","tok","isLinkClose","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","pretest","schema","markup","lastIndex","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","t","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","openQuote","closeQuote","OUTER","single","quotes","StateCore","meta","attrPush","attrData","attrSet","attrGet","attrJoin","tokenize","startLine","endLine","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","getLine","bMarks","tShift","eMarks","escapedSplit","isEscaped","current","substring","silent","lineText","nextLine","columns","columnCount","aligns","tableLines","tbodyLines","oldParentType","terminate","terminatorRules","shift","pop","parentType","last","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","adjustTab","initial","lastLineEmpty","offset","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","bsCount","cnt","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","Math","min","markTightParagraphs","_endLine","destEndPos","destEndLineNo","href","label","res","title","references","tmp","skipSpacesBack","skipCharsBack","block_names","HTML_OPEN_CLOSE_TAG_RE","HTML_SEQUENCES","html","open_tag","close_tag","HTML_TAG_RE","StateBlock","s","indent_found","ddIndent","from","begin","end","keepLastLF","lineIndent","first","queue","lineStart","_rules2","pending","pushPending","isTerminatorChar","pmax","ESCAPED","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","postProcess","delimiters","startDelim","endDelim","loneMarkers","scanned","scanDelims","jump","open","can_open","close","can_close","curr","tokens_meta","isStrong","labelStart","ref","parseReference","EMAIL_RE","AUTOLINK_RE","lc","isLetter","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","tail","re","http","src_auth","src_host_port_strict","src_path","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","link","createValidator","normalize","alias","slist","schema_test","src_ZPCc","schema_search","__index__","__text_cache__","resetScanCache","Match","__last_index__","__schema__","raw","createMatch","schemas","reduce","acc","add","definition","m","ml","me","next","tld_pos","testSchemaAt","keepOld","sort","el","reverse","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","floor","stringFromCharCode","RangeError","mapDomain","parts","encoded","array","ucs2decode","output","counter","extra","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","input","inputLength","n","bias","basic","oldi","w","codePoint","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","factory","modules","installedModules","moduleId","id","loaded","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","source_map_consumer","global_mapForUri","Semaphore","incr","decr","flush","whenReady","Fetcher","sem","sync","mapForUri","cacheGlobally","ajax","uri","callback","xhr","xmlhttp","XMLHttpFactories","e","createXMLHTTPObject","that","onreadystatechange","readyState","send","fetchScript","onScriptLoad","absUrlRegex","status","responseText","mapUri","embeddedSourceMap","SourceMapConsumer","atob","origin","lastSlash","origNameChrome","origLine","origNameFirefox","formatOriginalPosition","column","XMLHttpRequest","ActiveXObject","done","fields","expected_fields","regex","skip_lines","rows","fetcher","traceFormat","navigator","userAgent","documentMode","origName","row","origPos","originalPositionFor","processSourceMaps","util","binarySearch","ArraySet","base64VLQ","quickSort","aSourceMap","sourceMap","JSON","sections","IndexedSourceMapConsumer","BasicSourceMapConsumer","version","getArg","names","sourceRoot","sourcesContent","mappings","file","_version","isAbsolute","relative","_names","fromArray","_sources","_mappings","Mapping","generatedLine","generatedColumn","originalLine","originalColumn","lastOffset","_sections","offsetLine","offsetColumn","generatedOffset","consumer","fromSourceMap","__generatedMappings","defineProperty","get","_parseMappings","__originalMappings","_charIsMappingSeparator","aStr","charAt","aSourceRoot","GENERATED_ORDER","ORIGINAL_ORDER","GREATEST_LOWER_BOUND","LEAST_UPPER_BOUND","eachMapping","aCallback","aContext","aOrder","context","_generatedMappings","_originalMappings","mapping","allGeneratedPositionsFor","aArgs","needle","_findMapping","compareByOriginalPositions","lastColumn","create","smc","toArray","_sourceRoot","_generateSourcesContent","_file","generatedMappings","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","segment","previousGeneratedColumn","previousOriginalLine","previousOriginalColumn","previousSource","previousName","cachedSegments","temp","originalMappings","compareByGeneratedPositionsDeflated","aNeedle","aMappings","aLineName","aColumnName","aComparator","aBias","computeColumnSpans","nextMapping","lastGeneratedColumn","Infinity","hasContentsOfAllSources","size","some","sc","sourceContentFor","aSource","nullOnMissing","urlParse","fileUriAbsPath","scheme","path","generatedPositionFor","constructor","sectionIndex","section","every","generatedPosition","sectionMappings","adjustedMapping","aName","aDefaultValue","urlRegexp","dataUrlRegexp","aUrl","urlGenerate","aParsedUrl","aPath","up","aRoot","aPathUrl","aRootUrl","joined","supportsNullProto","identity","isProtoString","strcmp","aStr1","aStr2","toSetString","fromSetString","mappingA","mappingB","onlyCompareOriginal","cmp","onlyCompareGenerated","compareByGeneratedPositionsInflated","recursiveSearch","aLow","aHigh","aHaystack","aCompare","mid","_array","_set","aArray","aAllowDuplicates","getOwnPropertyNames","sStr","isDuplicate","aIdx","base64","aValue","vlq","toVLQSigned","VLQ_BASE","aIndex","aOutParam","continuation","shifted","strLen","intToCharMap","number","charCode","swap","ary","x","y","doQuickSort","comparator","low","high","round","random","pivot","__webpack_module_cache__","__webpack_require__","__webpack_modules__","getter","__esModule","d","a","o","enumerable","prop","Symbol","toStringTag"],"mappings":"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","file":"js/bundle-e5998aeb383fd357b1f6.js","sourcesContent":["import \"tachyons\"\nimport \"../css/styles.css\"\nimport renderMarkdown from \"./renderMarkdown.js\"\nimport { mapStackTrace } from \"sourcemapped-stacktrace\"\n\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n  document.getElementById(\"editor\").addEventListener(\n    \"submit\",\n    (event) => {\n      event.preventDefault()\n      const textArea       = document.getElementById(\"source\"),\n            previewElement = document.getElementById(\"preview\")\n\n      try {\n        renderMarkdown(textArea,previewElement)\n      } catch (error) {\n/* START:edit:3 */\n        mapStackTrace(error.stack, (mappedStack) => {\n           const stack = mappedStack.join(\"\\n\")\n           previewElement.innerHTML = `<pre>${stack}</pre>`\n        })\n/* END:edit:3 */\n      }\n    }\n  )\n})\n","import MarkdownIt from \"markdown-it\"\n\nconst markdown = new MarkdownIt()\n\nconst renderMarkdown = (textArea, previewElement) => {\n  const text = textArea.value\n/* START:edit:3 */\n  throw new Error(\"OH NOES!\")\n/* END:edit:3 */\n  previewElement.innerHTML = markdown.render(text)\n}\n\nexport default renderMarkdown\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * fence infostring\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos++);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      jump:   i / 2, // for `~~` 1 marker = 2 characters\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               delimiters[startDelim.end + 1].token === endDelim.token + 1 &&\n               delimiters[i - 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker and each delimiter length modulo 3.\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][closer.length % 3];\n\n    openerIdx = closerIdx - closer.jump - 1;\n\n    // avoid crash if `closer.jump` is pointing outside of the array, see #742\n    if (openerIdx < -1) openerIdx = -1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            delimiters[openerIdx - 1].jump + 1 :\n            0;\n\n          closer.jump  = closerIdx - openerIdx + lastJump;\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.jump  = lastJump;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          '\\\\,(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sourceMappedStackTrace\"] = factory();\n\telse\n\t\troot[\"sourceMappedStackTrace\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n\t * sourcemapped-stacktrace.js\n\t * created by James Salter <iteration@gmail.com> (2014)\n\t *\n\t * https://github.com/novocaine/sourcemapped-stacktrace\n\t *\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\t/*global define */\n\n\t// note we only include source-map-consumer, not the whole source-map library,\n\t// which includes gear for generating source maps that we don't need\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(source_map_consumer) {\n\n\t  var global_mapForUri = {};\n\n\t  /**\n\t   * Re-map entries in a stacktrace using sourcemaps if available.\n\t   *\n\t   * @param {str} stack - The stacktrace from the browser.\n\t   * @param {function} done - Callback invoked with the transformed stacktrace\n\t   *                          (an Array of Strings) passed as the first\n\t   *                          argument\n\t   * @param {Object} [opts] - Optional options object.\n\t   * @param {Function} [opts.filter] - Filter function applied to each stackTrace line.\n\t   *                                   Lines which do not pass the filter won't be processesd.\n\t   * @param {boolean} [opts.cacheGlobally] - Whether to cache sourcemaps globally across multiple calls.\n\t   * @param {boolean} [opts.sync] - Whether to use synchronous ajax to load the sourcemaps.\n\t   * @param {string} [opts.traceFormat] - If `error.stack` is formatted according to chrome or\n\t   *                                      Firefox's style.  Can be either `\"chrome\"`, `\"firefox\"`\n\t   *                                      or `undefined` (default).  If `undefined`, this library\n\t   *                                      will guess based on `navigator.userAgent`.\n\t   */\n\t  var mapStackTrace = function(stack, done, opts) {\n\t    var lines;\n\t    var line;\n\t    var mapForUri = {};\n\t    var rows = {};\n\t    var fields;\n\t    var uri;\n\t    var expected_fields;\n\t    var regex;\n\t    var skip_lines;\n\n\t    var fetcher = new Fetcher(opts);\n\n\t    var traceFormat = opts && opts.traceFormat;\n\t    if (traceFormat !== \"chrome\" && traceFormat !== \"firefox\") {\n\t      if (traceFormat) {\n\t        throw new Error(\"unknown traceFormat \\\"\" + traceFormat + \"\\\" :(\");\n\t      } else if (isChromeOrEdge() || isIE11Plus()) {\n\t        traceFormat = \"chrome\";\n\t      } else if (isFirefox() || isSafari()) {\n\t        traceFormat = \"firefox\";\n\t      } else {\n\t        throw new Error(\"unknown browser :(\");\n\t      }\n\t    }\n\n\t    if (traceFormat === \"chrome\") {\n\t      regex = /^ +at.+\\((.*):([0-9]+):([0-9]+)/;\n\t      expected_fields = 4;\n\t      // (skip first line containing exception message)\n\t      skip_lines = 1;\n\t    } else {\n\t      regex = /@(.*):([0-9]+):([0-9]+)/;\n\t      expected_fields = 4;\n\t      skip_lines = 0;\n\t    }\n\n\t    lines = stack.split(\"\\n\").slice(skip_lines);\n\n\t    for (var i=0; i < lines.length; i++) {\n\t      line = lines[i];\n\t      if ( opts && opts.filter && !opts.filter(line) ) continue;\n\t      \n\t      fields = line.match(regex);\n\t      if (fields && fields.length === expected_fields) {\n\t        rows[i] = fields;\n\t        uri = fields[1];\n\t        if (!uri.match(/<anonymous>/)) {\n\t          fetcher.fetchScript(uri);\n\t        }\n\t      }\n\t    }\n\n\t    fetcher.sem.whenReady(function() {\n\t      var result = processSourceMaps(lines, rows, fetcher.mapForUri, traceFormat);\n\t      done(result);\n\t    });\n\t  };\n\n\t  var isChromeOrEdge = function() {\n\t    return navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\n\t  };\n\n\t  var isFirefox = function() {\n\t    return navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n\t  };  \n\n\t  var isSafari = function() {\n\t    return navigator.userAgent.toLowerCase().indexOf('safari') > -1;\n\t  };\n\t\t\t\n\t  var isIE11Plus = function() {\n\t   \treturn document.documentMode && document.documentMode >= 11;\n\t  };\n\n\n\t  var Semaphore = function() {\n\t    this.count = 0;\n\t    this.pending = [];\n\t  };\n\n\t  Semaphore.prototype.incr = function() {\n\t    this.count++;\n\t  };\n\n\t  Semaphore.prototype.decr = function() {\n\t    this.count--;\n\t    this.flush();\n\t  };\n\n\t  Semaphore.prototype.whenReady = function(fn) {\n\t    this.pending.push(fn);\n\t    this.flush();\n\t  };\n\n\t  Semaphore.prototype.flush = function() {\n\t    if (this.count === 0) {\n\t        this.pending.forEach(function(fn) { fn(); });\n\t        this.pending = [];\n\t    }\n\t  };\n\n\n\t  var Fetcher = function(opts) {\n\t    this.sem = new Semaphore();\n\t    this.sync = opts && opts.sync;\n\t    this.mapForUri = opts && opts.cacheGlobally ? global_mapForUri : {};\n\t  };\n\n\t  Fetcher.prototype.ajax = function(uri, callback) {\n\t    var xhr = createXMLHTTPObject();\n\t    var that = this;\n\t    xhr.onreadystatechange = function() {\n\t      if (xhr.readyState == 4) {\n\t        callback.call(that, xhr, uri);\n\t      }\n\t    };\n\t    xhr.open(\"GET\", uri, !this.sync);\n\t    xhr.send();\n\t  }\n\n\t  Fetcher.prototype.fetchScript = function(uri) {\n\t    if (!(uri in this.mapForUri)) {\n\t      this.sem.incr();\n\t      this.mapForUri[uri] = null;\n\t    } else {\n\t      return;\n\t    }\n\n\t    this.ajax(uri, this.onScriptLoad);\n\t  };\n\n\t  var absUrlRegex = new RegExp('^(?:[a-z]+:)?//', 'i');\n\n\t  Fetcher.prototype.onScriptLoad = function(xhr, uri) {\n\t    if (xhr.status === 200 || (uri.slice(0, 7) === \"file://\" && xhr.status === 0)) {\n\t      // find .map in file.\n\t      //\n\t      // attempt to find it at the very end of the file, but tolerate trailing\n\t      // whitespace inserted by some packers.\n\t      var match = xhr.responseText.match(\"//# [s]ourceMappingURL=(.*)[\\\\s]*$\", \"m\");\n\t      if (match && match.length === 2) {\n\t        // get the map\n\t        var mapUri = match[1];\n\n\t        var embeddedSourceMap = mapUri.match(\"data:application/json;(charset=[^;]+;)?base64,(.*)\");\n\n\t        if (embeddedSourceMap && embeddedSourceMap[2]) {\n\t          this.mapForUri[uri] = new source_map_consumer.SourceMapConsumer(atob(embeddedSourceMap[2]));\n\t          this.sem.decr();\n\t        } else {\n\t          if (!absUrlRegex.test(mapUri)) {\n\t            // relative url; according to sourcemaps spec is 'source origin'\n\t            var origin;\n\t            var lastSlash = uri.lastIndexOf('/');\n\t            if (lastSlash !== -1) {\n\t              origin = uri.slice(0, lastSlash + 1);\n\t              mapUri = origin + mapUri;\n\t              // note if lastSlash === -1, actual script uri has no slash\n\t              // somehow, so no way to use it as a prefix... we give up and try\n\t              // as absolute\n\t            }\n\t          }\n\n\t          this.ajax(mapUri, function(xhr) {\n\t            if (xhr.status === 200 || (mapUri.slice(0, 7) === \"file://\" && xhr.status === 0)) {\n\t              this.mapForUri[uri] = new source_map_consumer.SourceMapConsumer(xhr.responseText);\n\t            }\n\t            this.sem.decr();\n\t          });\n\t        }\n\t      } else {\n\t        // no map\n\t        this.sem.decr();\n\t      }\n\t    } else {\n\t      // HTTP error fetching uri of the script\n\t      this.sem.decr();\n\t    }\n\t  };\n\n\t  var processSourceMaps = function(lines, rows, mapForUri, traceFormat) {\n\t    var result = [];\n\t    var map;\n\t    var origName = traceFormat === \"chrome\" ? origNameChrome : origNameFirefox;\n\t    for (var i=0; i < lines.length; i++) {\n\t      var row = rows[i];\n\t      if (row) {\n\t        var uri = row[1];\n\t        var line = parseInt(row[2], 10);\n\t        var column = parseInt(row[3], 10);\n\t        map = mapForUri[uri];\n\n\t        if (map) {\n\t          // we think we have a map for that uri. call source-map library\n\t          var origPos = map.originalPositionFor(\n\t            { line: line, column: column });\n\t          result.push(formatOriginalPosition(origPos.source,\n\t            origPos.line, origPos.column, origPos.name || origName(lines[i])));\n\t        } else {\n\t          // we can't find a map for that url, but we parsed the row.\n\t          // reformat unchanged line for consistency with the sourcemapped\n\t          // lines.\n\t          result.push(formatOriginalPosition(uri, line, column, origName(lines[i])));\n\t        }\n\t      } else {\n\t        // we weren't able to parse the row, push back what we were given\n\t        result.push(lines[i]);\n\t      }\n\t    }\n\n\t    return result;\n\t  };\n\n\t  function origNameChrome(origLine) {\n\t    var match = / +at +([^ ]*).*/.exec(origLine);\n\t    return match && match[1];\n\t  }\n\n\t  function origNameFirefox(origLine) {\n\t    var match = /([^@]*)@.*/.exec(origLine);\n\t    return match && match[1];\n\t  }\n\n\t  var formatOriginalPosition = function(source, line, column, name) {\n\t    // mimic chrome's format\n\t    return \"    at \" + (name ? name : \"(unknown)\") +\n\t      \" (\" + source + \":\" + line + \":\" + column + \")\";\n\t  };\n\n\t  // xmlhttprequest boilerplate\n\t  var XMLHttpFactories = [\n\t\tfunction () {return new XMLHttpRequest();},\n\t\tfunction () {return new ActiveXObject(\"Msxml2.XMLHTTP\");},\n\t\tfunction () {return new ActiveXObject(\"Msxml3.XMLHTTP\");},\n\t\tfunction () {return new ActiveXObject(\"Microsoft.XMLHTTP\");}\n\t  ];\n\n\t  function createXMLHTTPObject() {\n\t      var xmlhttp = false;\n\t      for (var i=0;i<XMLHttpFactories.length;i++) {\n\t          try {\n\t              xmlhttp = XMLHttpFactories[i]();\n\t          }\n\t          catch (e) {\n\t              continue;\n\t          }\n\t          break;\n\t      }\n\t      return xmlhttp;\n\t  }\n\n\t  return {\n\t    mapStackTrace: mapStackTrace\n\t  }\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\tvar util = __webpack_require__(2);\n\tvar binarySearch = __webpack_require__(3);\n\tvar ArraySet = __webpack_require__(4).ArraySet;\n\tvar base64VLQ = __webpack_require__(5);\n\tvar quickSort = __webpack_require__(7).quickSort;\n\n\tfunction SourceMapConsumer(aSourceMap) {\n\t  var sourceMap = aSourceMap;\n\t  if (typeof aSourceMap === 'string') {\n\t    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n\t  }\n\n\t  return sourceMap.sections != null\n\t    ? new IndexedSourceMapConsumer(sourceMap)\n\t    : new BasicSourceMapConsumer(sourceMap);\n\t}\n\n\tSourceMapConsumer.fromSourceMap = function(aSourceMap) {\n\t  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n\t}\n\n\t/**\n\t * The version of the source mapping spec that we are consuming.\n\t */\n\tSourceMapConsumer.prototype._version = 3;\n\n\t// `__generatedMappings` and `__originalMappings` are arrays that hold the\n\t// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n\t// are lazily instantiated, accessed via the `_generatedMappings` and\n\t// `_originalMappings` getters respectively, and we only parse the mappings\n\t// and create these arrays once queried for a source location. We jump through\n\t// these hoops because there can be many thousands of mappings, and parsing\n\t// them is expensive, so we only want to do it if we must.\n\t//\n\t// Each object in the arrays is of the form:\n\t//\n\t//     {\n\t//       generatedLine: The line number in the generated code,\n\t//       generatedColumn: The column number in the generated code,\n\t//       source: The path to the original source file that generated this\n\t//               chunk of code,\n\t//       originalLine: The line number in the original source that\n\t//                     corresponds to this chunk of generated code,\n\t//       originalColumn: The column number in the original source that\n\t//                       corresponds to this chunk of generated code,\n\t//       name: The name of the original symbol which generated this chunk of\n\t//             code.\n\t//     }\n\t//\n\t// All properties except for `generatedLine` and `generatedColumn` can be\n\t// `null`.\n\t//\n\t// `_generatedMappings` is ordered by the generated positions.\n\t//\n\t// `_originalMappings` is ordered by the original positions.\n\n\tSourceMapConsumer.prototype.__generatedMappings = null;\n\tObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n\t  get: function () {\n\t    if (!this.__generatedMappings) {\n\t      this._parseMappings(this._mappings, this.sourceRoot);\n\t    }\n\n\t    return this.__generatedMappings;\n\t  }\n\t});\n\n\tSourceMapConsumer.prototype.__originalMappings = null;\n\tObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n\t  get: function () {\n\t    if (!this.__originalMappings) {\n\t      this._parseMappings(this._mappings, this.sourceRoot);\n\t    }\n\n\t    return this.__originalMappings;\n\t  }\n\t});\n\n\tSourceMapConsumer.prototype._charIsMappingSeparator =\n\t  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n\t    var c = aStr.charAt(index);\n\t    return c === \";\" || c === \",\";\n\t  };\n\n\t/**\n\t * Parse the mappings in a string in to a data structure which we can easily\n\t * query (the ordered arrays in the `this.__generatedMappings` and\n\t * `this.__originalMappings` properties).\n\t */\n\tSourceMapConsumer.prototype._parseMappings =\n\t  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n\t    throw new Error(\"Subclasses must implement _parseMappings\");\n\t  };\n\n\tSourceMapConsumer.GENERATED_ORDER = 1;\n\tSourceMapConsumer.ORIGINAL_ORDER = 2;\n\n\tSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\n\tSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n\t/**\n\t * Iterate over each mapping between an original source/line/column and a\n\t * generated line/column in this source map.\n\t *\n\t * @param Function aCallback\n\t *        The function that is called with each mapping.\n\t * @param Object aContext\n\t *        Optional. If specified, this object will be the value of `this` every\n\t *        time that `aCallback` is called.\n\t * @param aOrder\n\t *        Either `SourceMapConsumer.GENERATED_ORDER` or\n\t *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n\t *        iterate over the mappings sorted by the generated file's line/column\n\t *        order or the original's source/line/column order, respectively. Defaults to\n\t *        `SourceMapConsumer.GENERATED_ORDER`.\n\t */\n\tSourceMapConsumer.prototype.eachMapping =\n\t  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n\t    var context = aContext || null;\n\t    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n\t    var mappings;\n\t    switch (order) {\n\t    case SourceMapConsumer.GENERATED_ORDER:\n\t      mappings = this._generatedMappings;\n\t      break;\n\t    case SourceMapConsumer.ORIGINAL_ORDER:\n\t      mappings = this._originalMappings;\n\t      break;\n\t    default:\n\t      throw new Error(\"Unknown order of iteration.\");\n\t    }\n\n\t    var sourceRoot = this.sourceRoot;\n\t    mappings.map(function (mapping) {\n\t      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n\t      if (source != null && sourceRoot != null) {\n\t        source = util.join(sourceRoot, source);\n\t      }\n\t      return {\n\t        source: source,\n\t        generatedLine: mapping.generatedLine,\n\t        generatedColumn: mapping.generatedColumn,\n\t        originalLine: mapping.originalLine,\n\t        originalColumn: mapping.originalColumn,\n\t        name: mapping.name === null ? null : this._names.at(mapping.name)\n\t      };\n\t    }, this).forEach(aCallback, context);\n\t  };\n\n\t/**\n\t * Returns all generated line and column information for the original source,\n\t * line, and column provided. If no column is provided, returns all mappings\n\t * corresponding to a either the line we are searching for or the next\n\t * closest line that has any mappings. Otherwise, returns all mappings\n\t * corresponding to the given line and either the column we are searching for\n\t * or the next closest column that has any offsets.\n\t *\n\t * The only argument is an object with the following properties:\n\t *\n\t *   - source: The filename of the original source.\n\t *   - line: The line number in the original source.\n\t *   - column: Optional. the column number in the original source.\n\t *\n\t * and an array of objects is returned, each with the following properties:\n\t *\n\t *   - line: The line number in the generated source, or null.\n\t *   - column: The column number in the generated source, or null.\n\t */\n\tSourceMapConsumer.prototype.allGeneratedPositionsFor =\n\t  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n\t    var line = util.getArg(aArgs, 'line');\n\n\t    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n\t    // returns the index of the closest mapping less than the needle. By\n\t    // setting needle.originalColumn to 0, we thus find the last mapping for\n\t    // the given line, provided such a mapping exists.\n\t    var needle = {\n\t      source: util.getArg(aArgs, 'source'),\n\t      originalLine: line,\n\t      originalColumn: util.getArg(aArgs, 'column', 0)\n\t    };\n\n\t    if (this.sourceRoot != null) {\n\t      needle.source = util.relative(this.sourceRoot, needle.source);\n\t    }\n\t    if (!this._sources.has(needle.source)) {\n\t      return [];\n\t    }\n\t    needle.source = this._sources.indexOf(needle.source);\n\n\t    var mappings = [];\n\n\t    var index = this._findMapping(needle,\n\t                                  this._originalMappings,\n\t                                  \"originalLine\",\n\t                                  \"originalColumn\",\n\t                                  util.compareByOriginalPositions,\n\t                                  binarySearch.LEAST_UPPER_BOUND);\n\t    if (index >= 0) {\n\t      var mapping = this._originalMappings[index];\n\n\t      if (aArgs.column === undefined) {\n\t        var originalLine = mapping.originalLine;\n\n\t        // Iterate until either we run out of mappings, or we run into\n\t        // a mapping for a different line than the one we found. Since\n\t        // mappings are sorted, this is guaranteed to find all mappings for\n\t        // the line we found.\n\t        while (mapping && mapping.originalLine === originalLine) {\n\t          mappings.push({\n\t            line: util.getArg(mapping, 'generatedLine', null),\n\t            column: util.getArg(mapping, 'generatedColumn', null),\n\t            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n\t          });\n\n\t          mapping = this._originalMappings[++index];\n\t        }\n\t      } else {\n\t        var originalColumn = mapping.originalColumn;\n\n\t        // Iterate until either we run out of mappings, or we run into\n\t        // a mapping for a different line than the one we were searching for.\n\t        // Since mappings are sorted, this is guaranteed to find all mappings for\n\t        // the line we are searching for.\n\t        while (mapping &&\n\t               mapping.originalLine === line &&\n\t               mapping.originalColumn == originalColumn) {\n\t          mappings.push({\n\t            line: util.getArg(mapping, 'generatedLine', null),\n\t            column: util.getArg(mapping, 'generatedColumn', null),\n\t            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n\t          });\n\n\t          mapping = this._originalMappings[++index];\n\t        }\n\t      }\n\t    }\n\n\t    return mappings;\n\t  };\n\n\texports.SourceMapConsumer = SourceMapConsumer;\n\n\t/**\n\t * A BasicSourceMapConsumer instance represents a parsed source map which we can\n\t * query for information about the original file positions by giving it a file\n\t * position in the generated source.\n\t *\n\t * The only parameter is the raw source map (either as a JSON string, or\n\t * already parsed to an object). According to the spec, source maps have the\n\t * following attributes:\n\t *\n\t *   - version: Which version of the source map spec this map is following.\n\t *   - sources: An array of URLs to the original source files.\n\t *   - names: An array of identifiers which can be referrenced by individual mappings.\n\t *   - sourceRoot: Optional. The URL root from which all sources are relative.\n\t *   - sourcesContent: Optional. An array of contents of the original source files.\n\t *   - mappings: A string of base64 VLQs which contain the actual mappings.\n\t *   - file: Optional. The generated file this source map is associated with.\n\t *\n\t * Here is an example source map, taken from the source map spec[0]:\n\t *\n\t *     {\n\t *       version : 3,\n\t *       file: \"out.js\",\n\t *       sourceRoot : \"\",\n\t *       sources: [\"foo.js\", \"bar.js\"],\n\t *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n\t *       mappings: \"AA,AB;;ABCDE;\"\n\t *     }\n\t *\n\t * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n\t */\n\tfunction BasicSourceMapConsumer(aSourceMap) {\n\t  var sourceMap = aSourceMap;\n\t  if (typeof aSourceMap === 'string') {\n\t    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n\t  }\n\n\t  var version = util.getArg(sourceMap, 'version');\n\t  var sources = util.getArg(sourceMap, 'sources');\n\t  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n\t  // requires the array) to play nice here.\n\t  var names = util.getArg(sourceMap, 'names', []);\n\t  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n\t  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n\t  var mappings = util.getArg(sourceMap, 'mappings');\n\t  var file = util.getArg(sourceMap, 'file', null);\n\n\t  // Once again, Sass deviates from the spec and supplies the version as a\n\t  // string rather than a number, so we use loose equality checking here.\n\t  if (version != this._version) {\n\t    throw new Error('Unsupported version: ' + version);\n\t  }\n\n\t  sources = sources\n\t    .map(String)\n\t    // Some source maps produce relative source paths like \"./foo.js\" instead of\n\t    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n\t    // See bugzil.la/1090768.\n\t    .map(util.normalize)\n\t    // Always ensure that absolute sources are internally stored relative to\n\t    // the source root, if the source root is absolute. Not doing this would\n\t    // be particularly problematic when the source root is a prefix of the\n\t    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n\t    .map(function (source) {\n\t      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n\t        ? util.relative(sourceRoot, source)\n\t        : source;\n\t    });\n\n\t  // Pass `true` below to allow duplicate names and sources. While source maps\n\t  // are intended to be compressed and deduplicated, the TypeScript compiler\n\t  // sometimes generates source maps with duplicates in them. See Github issue\n\t  // #72 and bugzil.la/889492.\n\t  this._names = ArraySet.fromArray(names.map(String), true);\n\t  this._sources = ArraySet.fromArray(sources, true);\n\n\t  this.sourceRoot = sourceRoot;\n\t  this.sourcesContent = sourcesContent;\n\t  this._mappings = mappings;\n\t  this.file = file;\n\t}\n\n\tBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\n\tBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n\t/**\n\t * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n\t *\n\t * @param SourceMapGenerator aSourceMap\n\t *        The source map that will be consumed.\n\t * @returns BasicSourceMapConsumer\n\t */\n\tBasicSourceMapConsumer.fromSourceMap =\n\t  function SourceMapConsumer_fromSourceMap(aSourceMap) {\n\t    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n\t    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n\t    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n\t    smc.sourceRoot = aSourceMap._sourceRoot;\n\t    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n\t                                                            smc.sourceRoot);\n\t    smc.file = aSourceMap._file;\n\n\t    // Because we are modifying the entries (by converting string sources and\n\t    // names to indices into the sources and names ArraySets), we have to make\n\t    // a copy of the entry or else bad things happen. Shared mutable state\n\t    // strikes again! See github issue #191.\n\n\t    var generatedMappings = aSourceMap._mappings.toArray().slice();\n\t    var destGeneratedMappings = smc.__generatedMappings = [];\n\t    var destOriginalMappings = smc.__originalMappings = [];\n\n\t    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n\t      var srcMapping = generatedMappings[i];\n\t      var destMapping = new Mapping;\n\t      destMapping.generatedLine = srcMapping.generatedLine;\n\t      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n\t      if (srcMapping.source) {\n\t        destMapping.source = sources.indexOf(srcMapping.source);\n\t        destMapping.originalLine = srcMapping.originalLine;\n\t        destMapping.originalColumn = srcMapping.originalColumn;\n\n\t        if (srcMapping.name) {\n\t          destMapping.name = names.indexOf(srcMapping.name);\n\t        }\n\n\t        destOriginalMappings.push(destMapping);\n\t      }\n\n\t      destGeneratedMappings.push(destMapping);\n\t    }\n\n\t    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n\t    return smc;\n\t  };\n\n\t/**\n\t * The version of the source mapping spec that we are consuming.\n\t */\n\tBasicSourceMapConsumer.prototype._version = 3;\n\n\t/**\n\t * The list of original sources.\n\t */\n\tObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n\t  get: function () {\n\t    return this._sources.toArray().map(function (s) {\n\t      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n\t    }, this);\n\t  }\n\t});\n\n\t/**\n\t * Provide the JIT with a nice shape / hidden class.\n\t */\n\tfunction Mapping() {\n\t  this.generatedLine = 0;\n\t  this.generatedColumn = 0;\n\t  this.source = null;\n\t  this.originalLine = null;\n\t  this.originalColumn = null;\n\t  this.name = null;\n\t}\n\n\t/**\n\t * Parse the mappings in a string in to a data structure which we can easily\n\t * query (the ordered arrays in the `this.__generatedMappings` and\n\t * `this.__originalMappings` properties).\n\t */\n\tBasicSourceMapConsumer.prototype._parseMappings =\n\t  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n\t    var generatedLine = 1;\n\t    var previousGeneratedColumn = 0;\n\t    var previousOriginalLine = 0;\n\t    var previousOriginalColumn = 0;\n\t    var previousSource = 0;\n\t    var previousName = 0;\n\t    var length = aStr.length;\n\t    var index = 0;\n\t    var cachedSegments = {};\n\t    var temp = {};\n\t    var originalMappings = [];\n\t    var generatedMappings = [];\n\t    var mapping, str, segment, end, value;\n\n\t    while (index < length) {\n\t      if (aStr.charAt(index) === ';') {\n\t        generatedLine++;\n\t        index++;\n\t        previousGeneratedColumn = 0;\n\t      }\n\t      else if (aStr.charAt(index) === ',') {\n\t        index++;\n\t      }\n\t      else {\n\t        mapping = new Mapping();\n\t        mapping.generatedLine = generatedLine;\n\n\t        // Because each offset is encoded relative to the previous one,\n\t        // many segments often have the same encoding. We can exploit this\n\t        // fact by caching the parsed variable length fields of each segment,\n\t        // allowing us to avoid a second parse if we encounter the same\n\t        // segment again.\n\t        for (end = index; end < length; end++) {\n\t          if (this._charIsMappingSeparator(aStr, end)) {\n\t            break;\n\t          }\n\t        }\n\t        str = aStr.slice(index, end);\n\n\t        segment = cachedSegments[str];\n\t        if (segment) {\n\t          index += str.length;\n\t        } else {\n\t          segment = [];\n\t          while (index < end) {\n\t            base64VLQ.decode(aStr, index, temp);\n\t            value = temp.value;\n\t            index = temp.rest;\n\t            segment.push(value);\n\t          }\n\n\t          if (segment.length === 2) {\n\t            throw new Error('Found a source, but no line and column');\n\t          }\n\n\t          if (segment.length === 3) {\n\t            throw new Error('Found a source and line, but no column');\n\t          }\n\n\t          cachedSegments[str] = segment;\n\t        }\n\n\t        // Generated column.\n\t        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n\t        previousGeneratedColumn = mapping.generatedColumn;\n\n\t        if (segment.length > 1) {\n\t          // Original source.\n\t          mapping.source = previousSource + segment[1];\n\t          previousSource += segment[1];\n\n\t          // Original line.\n\t          mapping.originalLine = previousOriginalLine + segment[2];\n\t          previousOriginalLine = mapping.originalLine;\n\t          // Lines are stored 0-based\n\t          mapping.originalLine += 1;\n\n\t          // Original column.\n\t          mapping.originalColumn = previousOriginalColumn + segment[3];\n\t          previousOriginalColumn = mapping.originalColumn;\n\n\t          if (segment.length > 4) {\n\t            // Original name.\n\t            mapping.name = previousName + segment[4];\n\t            previousName += segment[4];\n\t          }\n\t        }\n\n\t        generatedMappings.push(mapping);\n\t        if (typeof mapping.originalLine === 'number') {\n\t          originalMappings.push(mapping);\n\t        }\n\t      }\n\t    }\n\n\t    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n\t    this.__generatedMappings = generatedMappings;\n\n\t    quickSort(originalMappings, util.compareByOriginalPositions);\n\t    this.__originalMappings = originalMappings;\n\t  };\n\n\t/**\n\t * Find the mapping that best matches the hypothetical \"needle\" mapping that\n\t * we are searching for in the given \"haystack\" of mappings.\n\t */\n\tBasicSourceMapConsumer.prototype._findMapping =\n\t  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n\t                                         aColumnName, aComparator, aBias) {\n\t    // To return the position we are searching for, we must first find the\n\t    // mapping for the given position and then return the opposite position it\n\t    // points to. Because the mappings are sorted, we can use binary search to\n\t    // find the best mapping.\n\n\t    if (aNeedle[aLineName] <= 0) {\n\t      throw new TypeError('Line must be greater than or equal to 1, got '\n\t                          + aNeedle[aLineName]);\n\t    }\n\t    if (aNeedle[aColumnName] < 0) {\n\t      throw new TypeError('Column must be greater than or equal to 0, got '\n\t                          + aNeedle[aColumnName]);\n\t    }\n\n\t    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n\t  };\n\n\t/**\n\t * Compute the last column for each generated mapping. The last column is\n\t * inclusive.\n\t */\n\tBasicSourceMapConsumer.prototype.computeColumnSpans =\n\t  function SourceMapConsumer_computeColumnSpans() {\n\t    for (var index = 0; index < this._generatedMappings.length; ++index) {\n\t      var mapping = this._generatedMappings[index];\n\n\t      // Mappings do not contain a field for the last generated columnt. We\n\t      // can come up with an optimistic estimate, however, by assuming that\n\t      // mappings are contiguous (i.e. given two consecutive mappings, the\n\t      // first mapping ends where the second one starts).\n\t      if (index + 1 < this._generatedMappings.length) {\n\t        var nextMapping = this._generatedMappings[index + 1];\n\n\t        if (mapping.generatedLine === nextMapping.generatedLine) {\n\t          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n\t          continue;\n\t        }\n\t      }\n\n\t      // The last mapping for each line spans the entire line.\n\t      mapping.lastGeneratedColumn = Infinity;\n\t    }\n\t  };\n\n\t/**\n\t * Returns the original source, line, and column information for the generated\n\t * source's line and column positions provided. The only argument is an object\n\t * with the following properties:\n\t *\n\t *   - line: The line number in the generated source.\n\t *   - column: The column number in the generated source.\n\t *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n\t *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n\t *     closest element that is smaller than or greater than the one we are\n\t *     searching for, respectively, if the exact element cannot be found.\n\t *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n\t *\n\t * and an object is returned with the following properties:\n\t *\n\t *   - source: The original source file, or null.\n\t *   - line: The line number in the original source, or null.\n\t *   - column: The column number in the original source, or null.\n\t *   - name: The original identifier, or null.\n\t */\n\tBasicSourceMapConsumer.prototype.originalPositionFor =\n\t  function SourceMapConsumer_originalPositionFor(aArgs) {\n\t    var needle = {\n\t      generatedLine: util.getArg(aArgs, 'line'),\n\t      generatedColumn: util.getArg(aArgs, 'column')\n\t    };\n\n\t    var index = this._findMapping(\n\t      needle,\n\t      this._generatedMappings,\n\t      \"generatedLine\",\n\t      \"generatedColumn\",\n\t      util.compareByGeneratedPositionsDeflated,\n\t      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n\t    );\n\n\t    if (index >= 0) {\n\t      var mapping = this._generatedMappings[index];\n\n\t      if (mapping.generatedLine === needle.generatedLine) {\n\t        var source = util.getArg(mapping, 'source', null);\n\t        if (source !== null) {\n\t          source = this._sources.at(source);\n\t          if (this.sourceRoot != null) {\n\t            source = util.join(this.sourceRoot, source);\n\t          }\n\t        }\n\t        var name = util.getArg(mapping, 'name', null);\n\t        if (name !== null) {\n\t          name = this._names.at(name);\n\t        }\n\t        return {\n\t          source: source,\n\t          line: util.getArg(mapping, 'originalLine', null),\n\t          column: util.getArg(mapping, 'originalColumn', null),\n\t          name: name\n\t        };\n\t      }\n\t    }\n\n\t    return {\n\t      source: null,\n\t      line: null,\n\t      column: null,\n\t      name: null\n\t    };\n\t  };\n\n\t/**\n\t * Return true if we have the source content for every source in the source\n\t * map, false otherwise.\n\t */\n\tBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n\t  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n\t    if (!this.sourcesContent) {\n\t      return false;\n\t    }\n\t    return this.sourcesContent.length >= this._sources.size() &&\n\t      !this.sourcesContent.some(function (sc) { return sc == null; });\n\t  };\n\n\t/**\n\t * Returns the original source content. The only argument is the url of the\n\t * original source file. Returns null if no original source content is\n\t * available.\n\t */\n\tBasicSourceMapConsumer.prototype.sourceContentFor =\n\t  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n\t    if (!this.sourcesContent) {\n\t      return null;\n\t    }\n\n\t    if (this.sourceRoot != null) {\n\t      aSource = util.relative(this.sourceRoot, aSource);\n\t    }\n\n\t    if (this._sources.has(aSource)) {\n\t      return this.sourcesContent[this._sources.indexOf(aSource)];\n\t    }\n\n\t    var url;\n\t    if (this.sourceRoot != null\n\t        && (url = util.urlParse(this.sourceRoot))) {\n\t      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n\t      // many users. We can help them out when they expect file:// URIs to\n\t      // behave like it would if they were running a local HTTP server. See\n\t      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n\t      var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n\t      if (url.scheme == \"file\"\n\t          && this._sources.has(fileUriAbsPath)) {\n\t        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n\t      }\n\n\t      if ((!url.path || url.path == \"/\")\n\t          && this._sources.has(\"/\" + aSource)) {\n\t        return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n\t      }\n\t    }\n\n\t    // This function is used recursively from\n\t    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n\t    // don't want to throw if we can't find the source - we just want to\n\t    // return null, so we provide a flag to exit gracefully.\n\t    if (nullOnMissing) {\n\t      return null;\n\t    }\n\t    else {\n\t      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n\t    }\n\t  };\n\n\t/**\n\t * Returns the generated line and column information for the original source,\n\t * line, and column positions provided. The only argument is an object with\n\t * the following properties:\n\t *\n\t *   - source: The filename of the original source.\n\t *   - line: The line number in the original source.\n\t *   - column: The column number in the original source.\n\t *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n\t *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n\t *     closest element that is smaller than or greater than the one we are\n\t *     searching for, respectively, if the exact element cannot be found.\n\t *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n\t *\n\t * and an object is returned with the following properties:\n\t *\n\t *   - line: The line number in the generated source, or null.\n\t *   - column: The column number in the generated source, or null.\n\t */\n\tBasicSourceMapConsumer.prototype.generatedPositionFor =\n\t  function SourceMapConsumer_generatedPositionFor(aArgs) {\n\t    var source = util.getArg(aArgs, 'source');\n\t    if (this.sourceRoot != null) {\n\t      source = util.relative(this.sourceRoot, source);\n\t    }\n\t    if (!this._sources.has(source)) {\n\t      return {\n\t        line: null,\n\t        column: null,\n\t        lastColumn: null\n\t      };\n\t    }\n\t    source = this._sources.indexOf(source);\n\n\t    var needle = {\n\t      source: source,\n\t      originalLine: util.getArg(aArgs, 'line'),\n\t      originalColumn: util.getArg(aArgs, 'column')\n\t    };\n\n\t    var index = this._findMapping(\n\t      needle,\n\t      this._originalMappings,\n\t      \"originalLine\",\n\t      \"originalColumn\",\n\t      util.compareByOriginalPositions,\n\t      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n\t    );\n\n\t    if (index >= 0) {\n\t      var mapping = this._originalMappings[index];\n\n\t      if (mapping.source === needle.source) {\n\t        return {\n\t          line: util.getArg(mapping, 'generatedLine', null),\n\t          column: util.getArg(mapping, 'generatedColumn', null),\n\t          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n\t        };\n\t      }\n\t    }\n\n\t    return {\n\t      line: null,\n\t      column: null,\n\t      lastColumn: null\n\t    };\n\t  };\n\n\texports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n\t/**\n\t * An IndexedSourceMapConsumer instance represents a parsed source map which\n\t * we can query for information. It differs from BasicSourceMapConsumer in\n\t * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n\t * input.\n\t *\n\t * The only parameter is a raw source map (either as a JSON string, or already\n\t * parsed to an object). According to the spec for indexed source maps, they\n\t * have the following attributes:\n\t *\n\t *   - version: Which version of the source map spec this map is following.\n\t *   - file: Optional. The generated file this source map is associated with.\n\t *   - sections: A list of section definitions.\n\t *\n\t * Each value under the \"sections\" field has two fields:\n\t *   - offset: The offset into the original specified at which this section\n\t *       begins to apply, defined as an object with a \"line\" and \"column\"\n\t *       field.\n\t *   - map: A source map definition. This source map could also be indexed,\n\t *       but doesn't have to be.\n\t *\n\t * Instead of the \"map\" field, it's also possible to have a \"url\" field\n\t * specifying a URL to retrieve a source map from, but that's currently\n\t * unsupported.\n\t *\n\t * Here's an example source map, taken from the source map spec[0], but\n\t * modified to omit a section which uses the \"url\" field.\n\t *\n\t *  {\n\t *    version : 3,\n\t *    file: \"app.js\",\n\t *    sections: [{\n\t *      offset: {line:100, column:10},\n\t *      map: {\n\t *        version : 3,\n\t *        file: \"section.js\",\n\t *        sources: [\"foo.js\", \"bar.js\"],\n\t *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n\t *        mappings: \"AAAA,E;;ABCDE;\"\n\t *      }\n\t *    }],\n\t *  }\n\t *\n\t * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n\t */\n\tfunction IndexedSourceMapConsumer(aSourceMap) {\n\t  var sourceMap = aSourceMap;\n\t  if (typeof aSourceMap === 'string') {\n\t    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n\t  }\n\n\t  var version = util.getArg(sourceMap, 'version');\n\t  var sections = util.getArg(sourceMap, 'sections');\n\n\t  if (version != this._version) {\n\t    throw new Error('Unsupported version: ' + version);\n\t  }\n\n\t  this._sources = new ArraySet();\n\t  this._names = new ArraySet();\n\n\t  var lastOffset = {\n\t    line: -1,\n\t    column: 0\n\t  };\n\t  this._sections = sections.map(function (s) {\n\t    if (s.url) {\n\t      // The url field will require support for asynchronicity.\n\t      // See https://github.com/mozilla/source-map/issues/16\n\t      throw new Error('Support for url field in sections not implemented.');\n\t    }\n\t    var offset = util.getArg(s, 'offset');\n\t    var offsetLine = util.getArg(offset, 'line');\n\t    var offsetColumn = util.getArg(offset, 'column');\n\n\t    if (offsetLine < lastOffset.line ||\n\t        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n\t      throw new Error('Section offsets must be ordered and non-overlapping.');\n\t    }\n\t    lastOffset = offset;\n\n\t    return {\n\t      generatedOffset: {\n\t        // The offset fields are 0-based, but we use 1-based indices when\n\t        // encoding/decoding from VLQ.\n\t        generatedLine: offsetLine + 1,\n\t        generatedColumn: offsetColumn + 1\n\t      },\n\t      consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n\t    }\n\t  });\n\t}\n\n\tIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\n\tIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n\t/**\n\t * The version of the source mapping spec that we are consuming.\n\t */\n\tIndexedSourceMapConsumer.prototype._version = 3;\n\n\t/**\n\t * The list of original sources.\n\t */\n\tObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n\t  get: function () {\n\t    var sources = [];\n\t    for (var i = 0; i < this._sections.length; i++) {\n\t      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n\t        sources.push(this._sections[i].consumer.sources[j]);\n\t      }\n\t    }\n\t    return sources;\n\t  }\n\t});\n\n\t/**\n\t * Returns the original source, line, and column information for the generated\n\t * source's line and column positions provided. The only argument is an object\n\t * with the following properties:\n\t *\n\t *   - line: The line number in the generated source.\n\t *   - column: The column number in the generated source.\n\t *\n\t * and an object is returned with the following properties:\n\t *\n\t *   - source: The original source file, or null.\n\t *   - line: The line number in the original source, or null.\n\t *   - column: The column number in the original source, or null.\n\t *   - name: The original identifier, or null.\n\t */\n\tIndexedSourceMapConsumer.prototype.originalPositionFor =\n\t  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n\t    var needle = {\n\t      generatedLine: util.getArg(aArgs, 'line'),\n\t      generatedColumn: util.getArg(aArgs, 'column')\n\t    };\n\n\t    // Find the section containing the generated position we're trying to map\n\t    // to an original position.\n\t    var sectionIndex = binarySearch.search(needle, this._sections,\n\t      function(needle, section) {\n\t        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n\t        if (cmp) {\n\t          return cmp;\n\t        }\n\n\t        return (needle.generatedColumn -\n\t                section.generatedOffset.generatedColumn);\n\t      });\n\t    var section = this._sections[sectionIndex];\n\n\t    if (!section) {\n\t      return {\n\t        source: null,\n\t        line: null,\n\t        column: null,\n\t        name: null\n\t      };\n\t    }\n\n\t    return section.consumer.originalPositionFor({\n\t      line: needle.generatedLine -\n\t        (section.generatedOffset.generatedLine - 1),\n\t      column: needle.generatedColumn -\n\t        (section.generatedOffset.generatedLine === needle.generatedLine\n\t         ? section.generatedOffset.generatedColumn - 1\n\t         : 0),\n\t      bias: aArgs.bias\n\t    });\n\t  };\n\n\t/**\n\t * Return true if we have the source content for every source in the source\n\t * map, false otherwise.\n\t */\n\tIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n\t  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n\t    return this._sections.every(function (s) {\n\t      return s.consumer.hasContentsOfAllSources();\n\t    });\n\t  };\n\n\t/**\n\t * Returns the original source content. The only argument is the url of the\n\t * original source file. Returns null if no original source content is\n\t * available.\n\t */\n\tIndexedSourceMapConsumer.prototype.sourceContentFor =\n\t  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n\t    for (var i = 0; i < this._sections.length; i++) {\n\t      var section = this._sections[i];\n\n\t      var content = section.consumer.sourceContentFor(aSource, true);\n\t      if (content) {\n\t        return content;\n\t      }\n\t    }\n\t    if (nullOnMissing) {\n\t      return null;\n\t    }\n\t    else {\n\t      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n\t    }\n\t  };\n\n\t/**\n\t * Returns the generated line and column information for the original source,\n\t * line, and column positions provided. The only argument is an object with\n\t * the following properties:\n\t *\n\t *   - source: The filename of the original source.\n\t *   - line: The line number in the original source.\n\t *   - column: The column number in the original source.\n\t *\n\t * and an object is returned with the following properties:\n\t *\n\t *   - line: The line number in the generated source, or null.\n\t *   - column: The column number in the generated source, or null.\n\t */\n\tIndexedSourceMapConsumer.prototype.generatedPositionFor =\n\t  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n\t    for (var i = 0; i < this._sections.length; i++) {\n\t      var section = this._sections[i];\n\n\t      // Only consider this section if the requested source is in the list of\n\t      // sources of the consumer.\n\t      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n\t        continue;\n\t      }\n\t      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n\t      if (generatedPosition) {\n\t        var ret = {\n\t          line: generatedPosition.line +\n\t            (section.generatedOffset.generatedLine - 1),\n\t          column: generatedPosition.column +\n\t            (section.generatedOffset.generatedLine === generatedPosition.line\n\t             ? section.generatedOffset.generatedColumn - 1\n\t             : 0)\n\t        };\n\t        return ret;\n\t      }\n\t    }\n\n\t    return {\n\t      line: null,\n\t      column: null\n\t    };\n\t  };\n\n\t/**\n\t * Parse the mappings in a string in to a data structure which we can easily\n\t * query (the ordered arrays in the `this.__generatedMappings` and\n\t * `this.__originalMappings` properties).\n\t */\n\tIndexedSourceMapConsumer.prototype._parseMappings =\n\t  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n\t    this.__generatedMappings = [];\n\t    this.__originalMappings = [];\n\t    for (var i = 0; i < this._sections.length; i++) {\n\t      var section = this._sections[i];\n\t      var sectionMappings = section.consumer._generatedMappings;\n\t      for (var j = 0; j < sectionMappings.length; j++) {\n\t        var mapping = sectionMappings[j];\n\n\t        var source = section.consumer._sources.at(mapping.source);\n\t        if (section.consumer.sourceRoot !== null) {\n\t          source = util.join(section.consumer.sourceRoot, source);\n\t        }\n\t        this._sources.add(source);\n\t        source = this._sources.indexOf(source);\n\n\t        var name = section.consumer._names.at(mapping.name);\n\t        this._names.add(name);\n\t        name = this._names.indexOf(name);\n\n\t        // The mappings coming from the consumer for the section have\n\t        // generated positions relative to the start of the section, so we\n\t        // need to offset them to be relative to the start of the concatenated\n\t        // generated file.\n\t        var adjustedMapping = {\n\t          source: source,\n\t          generatedLine: mapping.generatedLine +\n\t            (section.generatedOffset.generatedLine - 1),\n\t          generatedColumn: mapping.generatedColumn +\n\t            (section.generatedOffset.generatedLine === mapping.generatedLine\n\t            ? section.generatedOffset.generatedColumn - 1\n\t            : 0),\n\t          originalLine: mapping.originalLine,\n\t          originalColumn: mapping.originalColumn,\n\t          name: name\n\t        };\n\n\t        this.__generatedMappings.push(adjustedMapping);\n\t        if (typeof adjustedMapping.originalLine === 'number') {\n\t          this.__originalMappings.push(adjustedMapping);\n\t        }\n\t      }\n\t    }\n\n\t    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n\t    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n\t  };\n\n\texports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\t/**\n\t * This is a helper function for getting values from parameter/options\n\t * objects.\n\t *\n\t * @param args The object we are extracting values from\n\t * @param name The name of the property we are getting.\n\t * @param defaultValue An optional value to return if the property is missing\n\t * from the object. If this is not specified and the property is missing, an\n\t * error will be thrown.\n\t */\n\tfunction getArg(aArgs, aName, aDefaultValue) {\n\t  if (aName in aArgs) {\n\t    return aArgs[aName];\n\t  } else if (arguments.length === 3) {\n\t    return aDefaultValue;\n\t  } else {\n\t    throw new Error('\"' + aName + '\" is a required argument.');\n\t  }\n\t}\n\texports.getArg = getArg;\n\n\tvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\n\tvar dataUrlRegexp = /^data:.+\\,.+$/;\n\n\tfunction urlParse(aUrl) {\n\t  var match = aUrl.match(urlRegexp);\n\t  if (!match) {\n\t    return null;\n\t  }\n\t  return {\n\t    scheme: match[1],\n\t    auth: match[2],\n\t    host: match[3],\n\t    port: match[4],\n\t    path: match[5]\n\t  };\n\t}\n\texports.urlParse = urlParse;\n\n\tfunction urlGenerate(aParsedUrl) {\n\t  var url = '';\n\t  if (aParsedUrl.scheme) {\n\t    url += aParsedUrl.scheme + ':';\n\t  }\n\t  url += '//';\n\t  if (aParsedUrl.auth) {\n\t    url += aParsedUrl.auth + '@';\n\t  }\n\t  if (aParsedUrl.host) {\n\t    url += aParsedUrl.host;\n\t  }\n\t  if (aParsedUrl.port) {\n\t    url += \":\" + aParsedUrl.port\n\t  }\n\t  if (aParsedUrl.path) {\n\t    url += aParsedUrl.path;\n\t  }\n\t  return url;\n\t}\n\texports.urlGenerate = urlGenerate;\n\n\t/**\n\t * Normalizes a path, or the path portion of a URL:\n\t *\n\t * - Replaces consecutive slashes with one slash.\n\t * - Removes unnecessary '.' parts.\n\t * - Removes unnecessary '<dir>/..' parts.\n\t *\n\t * Based on code in the Node.js 'path' core module.\n\t *\n\t * @param aPath The path or url to normalize.\n\t */\n\tfunction normalize(aPath) {\n\t  var path = aPath;\n\t  var url = urlParse(aPath);\n\t  if (url) {\n\t    if (!url.path) {\n\t      return aPath;\n\t    }\n\t    path = url.path;\n\t  }\n\t  var isAbsolute = exports.isAbsolute(path);\n\n\t  var parts = path.split(/\\/+/);\n\t  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n\t    part = parts[i];\n\t    if (part === '.') {\n\t      parts.splice(i, 1);\n\t    } else if (part === '..') {\n\t      up++;\n\t    } else if (up > 0) {\n\t      if (part === '') {\n\t        // The first part is blank if the path is absolute. Trying to go\n\t        // above the root is a no-op. Therefore we can remove all '..' parts\n\t        // directly after the root.\n\t        parts.splice(i + 1, up);\n\t        up = 0;\n\t      } else {\n\t        parts.splice(i, 2);\n\t        up--;\n\t      }\n\t    }\n\t  }\n\t  path = parts.join('/');\n\n\t  if (path === '') {\n\t    path = isAbsolute ? '/' : '.';\n\t  }\n\n\t  if (url) {\n\t    url.path = path;\n\t    return urlGenerate(url);\n\t  }\n\t  return path;\n\t}\n\texports.normalize = normalize;\n\n\t/**\n\t * Joins two paths/URLs.\n\t *\n\t * @param aRoot The root path or URL.\n\t * @param aPath The path or URL to be joined with the root.\n\t *\n\t * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n\t *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n\t *   first.\n\t * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n\t *   is updated with the result and aRoot is returned. Otherwise the result\n\t *   is returned.\n\t *   - If aPath is absolute, the result is aPath.\n\t *   - Otherwise the two paths are joined with a slash.\n\t * - Joining for example 'http://' and 'www.example.com' is also supported.\n\t */\n\tfunction join(aRoot, aPath) {\n\t  if (aRoot === \"\") {\n\t    aRoot = \".\";\n\t  }\n\t  if (aPath === \"\") {\n\t    aPath = \".\";\n\t  }\n\t  var aPathUrl = urlParse(aPath);\n\t  var aRootUrl = urlParse(aRoot);\n\t  if (aRootUrl) {\n\t    aRoot = aRootUrl.path || '/';\n\t  }\n\n\t  // `join(foo, '//www.example.org')`\n\t  if (aPathUrl && !aPathUrl.scheme) {\n\t    if (aRootUrl) {\n\t      aPathUrl.scheme = aRootUrl.scheme;\n\t    }\n\t    return urlGenerate(aPathUrl);\n\t  }\n\n\t  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n\t    return aPath;\n\t  }\n\n\t  // `join('http://', 'www.example.com')`\n\t  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n\t    aRootUrl.host = aPath;\n\t    return urlGenerate(aRootUrl);\n\t  }\n\n\t  var joined = aPath.charAt(0) === '/'\n\t    ? aPath\n\t    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n\t  if (aRootUrl) {\n\t    aRootUrl.path = joined;\n\t    return urlGenerate(aRootUrl);\n\t  }\n\t  return joined;\n\t}\n\texports.join = join;\n\n\texports.isAbsolute = function (aPath) {\n\t  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n\t};\n\n\t/**\n\t * Make a path relative to a URL or another path.\n\t *\n\t * @param aRoot The root path or URL.\n\t * @param aPath The path or URL to be made relative to aRoot.\n\t */\n\tfunction relative(aRoot, aPath) {\n\t  if (aRoot === \"\") {\n\t    aRoot = \".\";\n\t  }\n\n\t  aRoot = aRoot.replace(/\\/$/, '');\n\n\t  // It is possible for the path to be above the root. In this case, simply\n\t  // checking whether the root is a prefix of the path won't work. Instead, we\n\t  // need to remove components from the root one by one, until either we find\n\t  // a prefix that fits, or we run out of components to remove.\n\t  var level = 0;\n\t  while (aPath.indexOf(aRoot + '/') !== 0) {\n\t    var index = aRoot.lastIndexOf(\"/\");\n\t    if (index < 0) {\n\t      return aPath;\n\t    }\n\n\t    // If the only part of the root that is left is the scheme (i.e. http://,\n\t    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n\t    // have exhausted all components, so the path is not relative to the root.\n\t    aRoot = aRoot.slice(0, index);\n\t    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n\t      return aPath;\n\t    }\n\n\t    ++level;\n\t  }\n\n\t  // Make sure we add a \"../\" for each component we removed from the root.\n\t  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n\t}\n\texports.relative = relative;\n\n\tvar supportsNullProto = (function () {\n\t  var obj = Object.create(null);\n\t  return !('__proto__' in obj);\n\t}());\n\n\tfunction identity (s) {\n\t  return s;\n\t}\n\n\t/**\n\t * Because behavior goes wacky when you set `__proto__` on objects, we\n\t * have to prefix all the strings in our set with an arbitrary character.\n\t *\n\t * See https://github.com/mozilla/source-map/pull/31 and\n\t * https://github.com/mozilla/source-map/issues/30\n\t *\n\t * @param String aStr\n\t */\n\tfunction toSetString(aStr) {\n\t  if (isProtoString(aStr)) {\n\t    return '$' + aStr;\n\t  }\n\n\t  return aStr;\n\t}\n\texports.toSetString = supportsNullProto ? identity : toSetString;\n\n\tfunction fromSetString(aStr) {\n\t  if (isProtoString(aStr)) {\n\t    return aStr.slice(1);\n\t  }\n\n\t  return aStr;\n\t}\n\texports.fromSetString = supportsNullProto ? identity : fromSetString;\n\n\tfunction isProtoString(s) {\n\t  if (!s) {\n\t    return false;\n\t  }\n\n\t  var length = s.length;\n\n\t  if (length < 9 /* \"__proto__\".length */) {\n\t    return false;\n\t  }\n\n\t  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n\t      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n\t      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n\t      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n\t      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n\t      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n\t      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n\t      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n\t      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n\t    return false;\n\t  }\n\n\t  for (var i = length - 10; i >= 0; i--) {\n\t    if (s.charCodeAt(i) !== 36 /* '$' */) {\n\t      return false;\n\t    }\n\t  }\n\n\t  return true;\n\t}\n\n\t/**\n\t * Comparator between two mappings where the original positions are compared.\n\t *\n\t * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n\t * mappings with the same original source/line/column, but different generated\n\t * line and column the same. Useful when searching for a mapping with a\n\t * stubbed out mapping.\n\t */\n\tfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n\t  var cmp = mappingA.source - mappingB.source;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t  if (cmp !== 0 || onlyCompareOriginal) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedLine - mappingB.generatedLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  return mappingA.name - mappingB.name;\n\t}\n\texports.compareByOriginalPositions = compareByOriginalPositions;\n\n\t/**\n\t * Comparator between two mappings with deflated source and name indices where\n\t * the generated positions are compared.\n\t *\n\t * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n\t * mappings with the same generated line and column, but different\n\t * source/name/original line and column the same. Useful when searching for a\n\t * mapping with a stubbed out mapping.\n\t */\n\tfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n\t  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\t  if (cmp !== 0 || onlyCompareGenerated) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.source - mappingB.source;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  return mappingA.name - mappingB.name;\n\t}\n\texports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\n\tfunction strcmp(aStr1, aStr2) {\n\t  if (aStr1 === aStr2) {\n\t    return 0;\n\t  }\n\n\t  if (aStr1 > aStr2) {\n\t    return 1;\n\t  }\n\n\t  return -1;\n\t}\n\n\t/**\n\t * Comparator between two mappings with inflated source and name strings where\n\t * the generated positions are compared.\n\t */\n\tfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n\t  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = strcmp(mappingA.source, mappingB.source);\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  return strcmp(mappingA.name, mappingB.name);\n\t}\n\texports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\texports.GREATEST_LOWER_BOUND = 1;\n\texports.LEAST_UPPER_BOUND = 2;\n\n\t/**\n\t * Recursive implementation of binary search.\n\t *\n\t * @param aLow Indices here and lower do not contain the needle.\n\t * @param aHigh Indices here and higher do not contain the needle.\n\t * @param aNeedle The element being searched for.\n\t * @param aHaystack The non-empty array being searched.\n\t * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n\t * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n\t *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n\t *     closest element that is smaller than or greater than the one we are\n\t *     searching for, respectively, if the exact element cannot be found.\n\t */\n\tfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n\t  // This function terminates when one of the following is true:\n\t  //\n\t  //   1. We find the exact element we are looking for.\n\t  //\n\t  //   2. We did not find the exact element, but we can return the index of\n\t  //      the next-closest element.\n\t  //\n\t  //   3. We did not find the exact element, and there is no next-closest\n\t  //      element than the one we are searching for, so we return -1.\n\t  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n\t  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n\t  if (cmp === 0) {\n\t    // Found the element we are looking for.\n\t    return mid;\n\t  }\n\t  else if (cmp > 0) {\n\t    // Our needle is greater than aHaystack[mid].\n\t    if (aHigh - mid > 1) {\n\t      // The element is in the upper half.\n\t      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n\t    }\n\n\t    // The exact needle element was not found in this haystack. Determine if\n\t    // we are in termination case (3) or (2) and return the appropriate thing.\n\t    if (aBias == exports.LEAST_UPPER_BOUND) {\n\t      return aHigh < aHaystack.length ? aHigh : -1;\n\t    } else {\n\t      return mid;\n\t    }\n\t  }\n\t  else {\n\t    // Our needle is less than aHaystack[mid].\n\t    if (mid - aLow > 1) {\n\t      // The element is in the lower half.\n\t      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n\t    }\n\n\t    // we are in termination case (3) or (2) and return the appropriate thing.\n\t    if (aBias == exports.LEAST_UPPER_BOUND) {\n\t      return mid;\n\t    } else {\n\t      return aLow < 0 ? -1 : aLow;\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * This is an implementation of binary search which will always try and return\n\t * the index of the closest element if there is no exact hit. This is because\n\t * mappings between original and generated line/col pairs are single points,\n\t * and there is an implicit region between each of them, so a miss just means\n\t * that you aren't on the very start of a region.\n\t *\n\t * @param aNeedle The element you are looking for.\n\t * @param aHaystack The array that is being searched.\n\t * @param aCompare A function which takes the needle and an element in the\n\t *     array and returns -1, 0, or 1 depending on whether the needle is less\n\t *     than, equal to, or greater than the element, respectively.\n\t * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n\t *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n\t *     closest element that is smaller than or greater than the one we are\n\t *     searching for, respectively, if the exact element cannot be found.\n\t *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n\t */\n\texports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n\t  if (aHaystack.length === 0) {\n\t    return -1;\n\t  }\n\n\t  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n\t                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n\t  if (index < 0) {\n\t    return -1;\n\t  }\n\n\t  // We have found either the exact element, or the next-closest element than\n\t  // the one we are searching for. However, there may be more than one such\n\t  // element. Make sure we always return the smallest of these.\n\t  while (index - 1 >= 0) {\n\t    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n\t      break;\n\t    }\n\t    --index;\n\t  }\n\n\t  return index;\n\t};\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\tvar util = __webpack_require__(2);\n\tvar has = Object.prototype.hasOwnProperty;\n\n\t/**\n\t * A data structure which is a combination of an array and a set. Adding a new\n\t * member is O(1), testing for membership is O(1), and finding the index of an\n\t * element is O(1). Removing elements from the set is not supported. Only\n\t * strings are supported for membership.\n\t */\n\tfunction ArraySet() {\n\t  this._array = [];\n\t  this._set = Object.create(null);\n\t}\n\n\t/**\n\t * Static method for creating ArraySet instances from an existing array.\n\t */\n\tArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n\t  var set = new ArraySet();\n\t  for (var i = 0, len = aArray.length; i < len; i++) {\n\t    set.add(aArray[i], aAllowDuplicates);\n\t  }\n\t  return set;\n\t};\n\n\t/**\n\t * Return how many unique items are in this ArraySet. If duplicates have been\n\t * added, than those do not count towards the size.\n\t *\n\t * @returns Number\n\t */\n\tArraySet.prototype.size = function ArraySet_size() {\n\t  return Object.getOwnPropertyNames(this._set).length;\n\t};\n\n\t/**\n\t * Add the given string to this set.\n\t *\n\t * @param String aStr\n\t */\n\tArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n\t  var sStr = util.toSetString(aStr);\n\t  var isDuplicate = has.call(this._set, sStr);\n\t  var idx = this._array.length;\n\t  if (!isDuplicate || aAllowDuplicates) {\n\t    this._array.push(aStr);\n\t  }\n\t  if (!isDuplicate) {\n\t    this._set[sStr] = idx;\n\t  }\n\t};\n\n\t/**\n\t * Is the given string a member of this set?\n\t *\n\t * @param String aStr\n\t */\n\tArraySet.prototype.has = function ArraySet_has(aStr) {\n\t  var sStr = util.toSetString(aStr);\n\t  return has.call(this._set, sStr);\n\t};\n\n\t/**\n\t * What is the index of the given string in the array?\n\t *\n\t * @param String aStr\n\t */\n\tArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n\t  var sStr = util.toSetString(aStr);\n\t  if (has.call(this._set, sStr)) {\n\t    return this._set[sStr];\n\t  }\n\t  throw new Error('\"' + aStr + '\" is not in the set.');\n\t};\n\n\t/**\n\t * What is the element at the given index?\n\t *\n\t * @param Number aIdx\n\t */\n\tArraySet.prototype.at = function ArraySet_at(aIdx) {\n\t  if (aIdx >= 0 && aIdx < this._array.length) {\n\t    return this._array[aIdx];\n\t  }\n\t  throw new Error('No element indexed by ' + aIdx);\n\t};\n\n\t/**\n\t * Returns the array representation of this set (which has the proper indices\n\t * indicated by indexOf). Note that this is a copy of the internal array used\n\t * for storing the members so that no one can mess with internal state.\n\t */\n\tArraySet.prototype.toArray = function ArraySet_toArray() {\n\t  return this._array.slice();\n\t};\n\n\texports.ArraySet = ArraySet;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t *\n\t * Based on the Base 64 VLQ implementation in Closure Compiler:\n\t * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n\t *\n\t * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t *  * Redistributions of source code must retain the above copyright\n\t *    notice, this list of conditions and the following disclaimer.\n\t *  * Redistributions in binary form must reproduce the above\n\t *    copyright notice, this list of conditions and the following\n\t *    disclaimer in the documentation and/or other materials provided\n\t *    with the distribution.\n\t *  * Neither the name of Google Inc. nor the names of its\n\t *    contributors may be used to endorse or promote products derived\n\t *    from this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\t * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\t * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\t * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\t * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\n\tvar base64 = __webpack_require__(6);\n\n\t// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n\t// length quantities we use in the source map spec, the first bit is the sign,\n\t// the next four bits are the actual value, and the 6th bit is the\n\t// continuation bit. The continuation bit tells us whether there are more\n\t// digits in this value following this digit.\n\t//\n\t//   Continuation\n\t//   |    Sign\n\t//   |    |\n\t//   V    V\n\t//   101011\n\n\tvar VLQ_BASE_SHIFT = 5;\n\n\t// binary: 100000\n\tvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n\t// binary: 011111\n\tvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n\t// binary: 100000\n\tvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n\t/**\n\t * Converts from a two-complement value to a value where the sign bit is\n\t * placed in the least significant bit.  For example, as decimals:\n\t *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n\t *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n\t */\n\tfunction toVLQSigned(aValue) {\n\t  return aValue < 0\n\t    ? ((-aValue) << 1) + 1\n\t    : (aValue << 1) + 0;\n\t}\n\n\t/**\n\t * Converts to a two-complement value from a value where the sign bit is\n\t * placed in the least significant bit.  For example, as decimals:\n\t *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n\t *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n\t */\n\tfunction fromVLQSigned(aValue) {\n\t  var isNegative = (aValue & 1) === 1;\n\t  var shifted = aValue >> 1;\n\t  return isNegative\n\t    ? -shifted\n\t    : shifted;\n\t}\n\n\t/**\n\t * Returns the base 64 VLQ encoded value.\n\t */\n\texports.encode = function base64VLQ_encode(aValue) {\n\t  var encoded = \"\";\n\t  var digit;\n\n\t  var vlq = toVLQSigned(aValue);\n\n\t  do {\n\t    digit = vlq & VLQ_BASE_MASK;\n\t    vlq >>>= VLQ_BASE_SHIFT;\n\t    if (vlq > 0) {\n\t      // There are still more digits in this value, so we must make sure the\n\t      // continuation bit is marked.\n\t      digit |= VLQ_CONTINUATION_BIT;\n\t    }\n\t    encoded += base64.encode(digit);\n\t  } while (vlq > 0);\n\n\t  return encoded;\n\t};\n\n\t/**\n\t * Decodes the next base 64 VLQ value from the given string and returns the\n\t * value and the rest of the string via the out parameter.\n\t */\n\texports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n\t  var strLen = aStr.length;\n\t  var result = 0;\n\t  var shift = 0;\n\t  var continuation, digit;\n\n\t  do {\n\t    if (aIndex >= strLen) {\n\t      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n\t    }\n\n\t    digit = base64.decode(aStr.charCodeAt(aIndex++));\n\t    if (digit === -1) {\n\t      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n\t    }\n\n\t    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n\t    digit &= VLQ_BASE_MASK;\n\t    result = result + (digit << shift);\n\t    shift += VLQ_BASE_SHIFT;\n\t  } while (continuation);\n\n\t  aOutParam.value = fromVLQSigned(result);\n\t  aOutParam.rest = aIndex;\n\t};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\tvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n\t/**\n\t * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n\t */\n\texports.encode = function (number) {\n\t  if (0 <= number && number < intToCharMap.length) {\n\t    return intToCharMap[number];\n\t  }\n\t  throw new TypeError(\"Must be between 0 and 63: \" + number);\n\t};\n\n\t/**\n\t * Decode a single base 64 character code digit to an integer. Returns -1 on\n\t * failure.\n\t */\n\texports.decode = function (charCode) {\n\t  var bigA = 65;     // 'A'\n\t  var bigZ = 90;     // 'Z'\n\n\t  var littleA = 97;  // 'a'\n\t  var littleZ = 122; // 'z'\n\n\t  var zero = 48;     // '0'\n\t  var nine = 57;     // '9'\n\n\t  var plus = 43;     // '+'\n\t  var slash = 47;    // '/'\n\n\t  var littleOffset = 26;\n\t  var numberOffset = 52;\n\n\t  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n\t  if (bigA <= charCode && charCode <= bigZ) {\n\t    return (charCode - bigA);\n\t  }\n\n\t  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n\t  if (littleA <= charCode && charCode <= littleZ) {\n\t    return (charCode - littleA + littleOffset);\n\t  }\n\n\t  // 52 - 61: 0123456789\n\t  if (zero <= charCode && charCode <= nine) {\n\t    return (charCode - zero + numberOffset);\n\t  }\n\n\t  // 62: +\n\t  if (charCode == plus) {\n\t    return 62;\n\t  }\n\n\t  // 63: /\n\t  if (charCode == slash) {\n\t    return 63;\n\t  }\n\n\t  // Invalid base64 digit.\n\t  return -1;\n\t};\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\t// It turns out that some (most?) JavaScript engines don't self-host\n\t// `Array.prototype.sort`. This makes sense because C++ will likely remain\n\t// faster than JS when doing raw CPU-intensive sorting. However, when using a\n\t// custom comparator function, calling back and forth between the VM's C++ and\n\t// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n\t// worse generated code for the comparator function than would be optimal. In\n\t// fact, when sorting with a comparator, these costs outweigh the benefits of\n\t// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n\t// a ~3500ms mean speed-up in `bench/bench.html`.\n\n\t/**\n\t * Swap the elements indexed by `x` and `y` in the array `ary`.\n\t *\n\t * @param {Array} ary\n\t *        The array.\n\t * @param {Number} x\n\t *        The index of the first item.\n\t * @param {Number} y\n\t *        The index of the second item.\n\t */\n\tfunction swap(ary, x, y) {\n\t  var temp = ary[x];\n\t  ary[x] = ary[y];\n\t  ary[y] = temp;\n\t}\n\n\t/**\n\t * Returns a random integer within the range `low .. high` inclusive.\n\t *\n\t * @param {Number} low\n\t *        The lower bound on the range.\n\t * @param {Number} high\n\t *        The upper bound on the range.\n\t */\n\tfunction randomIntInRange(low, high) {\n\t  return Math.round(low + (Math.random() * (high - low)));\n\t}\n\n\t/**\n\t * The Quick Sort algorithm.\n\t *\n\t * @param {Array} ary\n\t *        An array to sort.\n\t * @param {function} comparator\n\t *        Function to use to compare two items.\n\t * @param {Number} p\n\t *        Start index of the array\n\t * @param {Number} r\n\t *        End index of the array\n\t */\n\tfunction doQuickSort(ary, comparator, p, r) {\n\t  // If our lower bound is less than our upper bound, we (1) partition the\n\t  // array into two pieces and (2) recurse on each half. If it is not, this is\n\t  // the empty array and our base case.\n\n\t  if (p < r) {\n\t    // (1) Partitioning.\n\t    //\n\t    // The partitioning chooses a pivot between `p` and `r` and moves all\n\t    // elements that are less than or equal to the pivot to the before it, and\n\t    // all the elements that are greater than it after it. The effect is that\n\t    // once partition is done, the pivot is in the exact place it will be when\n\t    // the array is put in sorted order, and it will not need to be moved\n\t    // again. This runs in O(n) time.\n\n\t    // Always choose a random pivot so that an input array which is reverse\n\t    // sorted does not cause O(n^2) running time.\n\t    var pivotIndex = randomIntInRange(p, r);\n\t    var i = p - 1;\n\n\t    swap(ary, pivotIndex, r);\n\t    var pivot = ary[r];\n\n\t    // Immediately after `j` is incremented in this loop, the following hold\n\t    // true:\n\t    //\n\t    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n\t    //\n\t    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n\t    for (var j = p; j < r; j++) {\n\t      if (comparator(ary[j], pivot) <= 0) {\n\t        i += 1;\n\t        swap(ary, i, j);\n\t      }\n\t    }\n\n\t    swap(ary, i + 1, j);\n\t    var q = i + 1;\n\n\t    // (2) Recurse on each half.\n\n\t    doQuickSort(ary, comparator, p, q - 1);\n\t    doQuickSort(ary, comparator, q + 1, r);\n\t  }\n\t}\n\n\t/**\n\t * Sort the given array in-place with the given comparator function.\n\t *\n\t * @param {Array} ary\n\t *        An array to sort.\n\t * @param {function} comparator\n\t *        Function to use to compare two items.\n\t */\n\texports.quickSort = function (ary, comparator) {\n\t  doQuickSort(ary, comparator, 0, ary.length - 1);\n\t};\n\n\n/***/ })\n/******/ ])\n});\n;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}